//Generated by wsdl2apex

public class TibcoConcession_Service {
    public class SOAPEventSource {
        //public String endpoint_x = 'https://sf.sewl.com.au/Pulse_Stubs/ConcessionsUpdate/ServiceAdapter/concessionsUpdate';
        public String endpoint_x = SystemSettings__c.getInstance().Tibco_Host_URL__c + '/ConcessionUpdate/ServiceAdapter/updateConcessionDetails_Consumer';
        //public String endpoint_x = 'http://www.postbin.org/yhxj5h';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.sewl.com.au/esb/wsdl/salesforce/concessionsupdate/concessionsUpdateImpl/ConcessionUpdate/ServiceAdapter', 'TibcoConcession_Service', 'http://www.sewl.com.au/esb/schemas/salesforce/concessions', 'TibcoConcession_MessageTypes'};
        public TibcoConcession_MessageTypes.concessionsUpdateResponse_element concessionsUpdate(TibcoConcession_MessageTypes.Header_element Header,TibcoConcession_MessageTypes.concessoinsDetails_element concessoinsDetails) {
            TibcoConcession_MessageTypes.concessionsUpdateRequest_element request_x = new TibcoConcession_MessageTypes.concessionsUpdateRequest_element();
            TibcoConcession_MessageTypes.concessionsUpdateResponse_element response_x;
            request_x.Header = Header;
            request_x.concessoinsDetails = concessoinsDetails;
            Map<String, TibcoConcession_MessageTypes.concessionsUpdateResponse_element> response_map_x = new Map<String, TibcoConcession_MessageTypes.concessionsUpdateResponse_element>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()&&!SystemSettings__c.getInstance().Disable_Web_Services__c){            
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  'updateConcessionDetails',
                  'http://www.sewl.com.au/esb/schemas/salesforce/concessions',
                  'concessionsUpdateRequest',
                  'http://www.sewl.com.au/esb/schemas/salesforce/concessions',
                  'concessionsUpdateResponse',
                  'TibcoConcession_MessageTypes.concessionsUpdateResponse_element'}
                );
                response_x = response_map_x.get('response_x');
            } else {
                response_x = new TibcoConcession_MessageTypes.concessionsUpdateResponse_element();
                
                if (!SystemSettings__c.getInstance().Disable_Web_Services__c) {
                    response_x.Header = new TibcoConcession_MessageTypes.Header_element();
                    response_x.Header.MessageResponseStatus = new TibcoConcession_MessageTypes.MessageResponseStatus_element();
                    response_x.Header.MessageResponseStatus.MessageSuccessInd = 'true';
                    //response_x.ValidConcession = true;
                    response_x.Rebilled = true;
                    response_x.RebillAmount = '100';
                    response_x.ConcessionReason = 'concession reason';
                } else { // return failure
                    response_x.Header = new TibcoConcession_MessageTypes.Header_element();
                    response_x.Header.MessageResponseStatus = new TibcoConcession_MessageTypes.MessageResponseStatus_element();
                    response_x.Header.MessageResponseStatus.MessageSuccessInd = 'false';                    
                    response_x.Header.MessageResponseStatus.ErrorStatus = new List<TibcoConcession_MessageTypes.ErrorStatus_element>();                 
                    TibcoConcession_MessageTypes.ErrorStatus_element err = new TibcoConcession_MessageTypes.ErrorStatus_element();
                    err.ErrorCode='123';
                    err.ErrorSeverity='1';
                    err.ErrorDescription='Test Error';
                    response_x.Header.MessageResponseStatus.ErrorStatus.add(err);
                }               
            }               
            return response_x;
        }
    }
}