/*
    Type:       Class generated by wsdl2apex
    Purpose:    Calls TIBCO Web Service for Meter Readings History

    Used By:    WSUtil_Property
    ---------------------------------------------------------------
    History:

    09-Aug-2011 J.Pe (Davanti Consulting)    Created

*/

public class TibcoMeterRead_Service {

    //Generated by wsdl2apex, edited to deal with testing
    public class SOAPEventSource {
//        public String endpoint_x = SystemSettings__c.getInstance().Tibco_Host_URL__c + '/Meter/ServiceAdapter/getMeterRead_Consumer';
        public String endpoint_x = SystemSettings__c.getInstance().Tibco_Host_URL__c + '/Meter/ServiceAdapter/specialMeterRead_ServiceConsumer.serviceagent/MeterReadEndpoint';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://www.sewl.com.au/esb/wsdl/salesforce/meterread/getMeterReadImpl/Meter/ServiceAdapter', 'TibcoMeterRead_Service', 'http://www.sewl.com.au/esb/schemas/salesforce/meterread', 'TibcoMeterRead_MessageTypes'};
        public TibcoMeterRead_MessageTypes.getMeterReadResponse_element getMeterRead(TibcoMeterRead_MessageTypes.Header_element Header,String MeterType,String MeterRef) {
            TibcoMeterRead_MessageTypes.getMeterReadRequest_element request_x = new TibcoMeterRead_MessageTypes.getMeterReadRequest_element();
            TibcoMeterRead_MessageTypes.getMeterReadResponse_element response_x;
            request_x.Header = Header;
            request_x.MeterType = MeterType;
            request_x.MeterRef = MeterRef;
            Map<String, TibcoMeterRead_MessageTypes.getMeterReadResponse_element> response_map_x = new Map<String, TibcoMeterRead_MessageTypes.getMeterReadResponse_element>();
            response_map_x.put('response_x', response_x);
            if(!Test.isRunningTest()&&!SystemSettings__c.getInstance().Disable_Web_Services__c){
                WebServiceCallout.invoke(
                  this,
                  request_x,
                  response_map_x,
                  new String[]{endpoint_x,
                  'getMeterRead',
                  'http://www.sewl.com.au/esb/schemas/salesforce/meterread',
                  'getMeterReadRequest',
                  'http://www.sewl.com.au/esb/schemas/salesforce/meterread',
                  'getMeterReadResponse',
                  'TibcoMeterRead_MessageTypes.getMeterReadResponse_element'}
                );
                response_x = response_map_x.get('response_x');
            }
            else{
                response_x = new TibcoMeterRead_MessageTypes.getMeterReadResponse_element();
                response_x.Header = new TibcoMeterRead_MessageTypes.Header_element();
                response_x.Header.MessageResponseStatus = new TibcoMeterRead_MessageTypes.MessageResponseStatus_element();
                response_x.Header.MessageResponseStatus.MessageSuccessInd = 'true';
                response_x.ProcessOutputData = new TibcoMeterRead_MessageTypes.ProcessOutputData_element();
                response_x.ProcessOutputData.MeterReads = new TibcoMeterRead_MessageTypes.MeterReads_element();
                response_x.ProcessOutputData.MeterReads.Read = new List<TibcoMeterRead_MessageTypes.Read_element>();
                TibcoMeterRead_MessageTypes.Read_element readLine = new TibcoMeterRead_MessageTypes.Read_element();
                readLine.ReadDate = Date.today();
                readLine.Reading = 'Test Reading';
                readLine.Consumption = 'Test Consumption';
                readLine.NoOfDays = 'Test NoOfDays';
                readLine.ReadingMethod = 'Test ReadingMethod';
                readLine.Estimated = 'Test Estimated';
                response_x.ProcessOutputData.MeterReads.Read.add(readLine);
            }
            return response_x;
        }
    }
}